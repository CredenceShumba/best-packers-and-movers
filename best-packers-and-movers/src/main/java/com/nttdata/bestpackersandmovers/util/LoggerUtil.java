package com.nttdata.bestpackersandmovers.util;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.nttdata.bestpackersandmovers.controller.CustomerController;

/**
 * @author SHUMBC
 *
 */
public class LoggerUtil {

	// used to log method calls into the console
	private static final Logger logger = LoggerFactory.getLogger(CustomerController.class);

	// fonts used in the doc
	private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD);
	private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.RED);
	// private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
	// Font.BOLD);
	private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);

	/**
	 * Should open a pdf file, add a new page for each call
	 * Since the file is generated with the minute value should pass which file to work with
	 * Still more to do here
	 * @param message
	 */
	public static void logAction(String message) {

		logger.info(message);
		createPdf("Best Packers and Movers pdfLog", new SimpleDateFormat("yyyy-MM-dd HH.mm").format(new Date()), message);
	}

	/**
	 * Method to create the Log pdf file
	 * 
	 * @param fileName
	 * @param logDate
	 */
	public static void createPdf(String fileName, String logDate, String info) {

		Document doc = new Document();
		// combination of location + file title or name + date time log + extension i.e.
		// pdf
		String file = "C:\\Users\\SHUMBC\\ThatLocation\\" + fileName + logDate + ".pdf";

		try {
			PdfWriter.getInstance(doc, new FileOutputStream(file));
			doc.open();
			addMetaData(doc);
			addTitlePage(doc, fileName);
			doc.add(new Paragraph(logDate));
		} catch (FileNotFoundException | DocumentException e) {
			e.printStackTrace();
		} finally {
			doc.close();
		}
	}

	/**
	 * Meta Data shows in adobe file properties
	 * 
	 * @param document
	 */
	private static void addMetaData(Document document) {
		document.addTitle("RESTful calls PDF log");
		document.addSubject("Using iText");
		document.addKeywords("Java, PDF, iText");
		document.addAuthor(System.getProperty("user.name"));
		document.addCreator("Best Packers and Movers Springboot application");
	}

	/**
	 * Create a Title page and a new empty page
	 * 
	 * @param document
	 * @param title
	 * @throws DocumentException
	 */
	public static void addTitlePage(Document document, String title) throws DocumentException {

		Paragraph preface = new Paragraph();

		addEmptyLine(preface, 1);
		preface.add(new Paragraph(title, catFont));
		addEmptyLine(preface, 1);
		preface.add(new Paragraph("Report generated by: " + System.getProperty("user.name") + ", " + new Date(),
				smallBold));
		addEmptyLine(preface, 3);
		preface.add(new Paragraph("This document contains the logs from the REST API calls during runtime", redFont));
		addEmptyLine(preface, 8);
		preface.setAlignment(Element.ALIGN_CENTER);
		document.add(preface);
		document.newPage();
	}

	/**
	 * Method used for indentation
	 * 
	 * @param paragraph
	 * @param number
	 */
	private static void addEmptyLine(Paragraph paragraph, int number) {
		// loop for the n number of lines
		for (int i = 0; i < number; i++) {
			paragraph.add(new Paragraph(" "));
		}
	}

}
